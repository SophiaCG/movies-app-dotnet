@model movies_app.Controllers.MovieViewModel

<div class="top-movie-section">
    @if (Model != null)
    {
        <img src="@($"https://image.tmdb.org/t/p/w500/{Model.Movie.BackdropPath}")" alt="@Model.Movie.Title" class="top-movie-backdrop" />
        <div class="top-movie-info">
            <a asp-area="" asp-controller="Home" asp-action="Details" asp-route-result="@Model.Movie.Id" style="text-decoration: none;">
                <h1 class="top-movie-title">@Model.Movie.Title</h1>
            </a>
            @{
                List<string> genresList = new List<string>();
                foreach (var genre in Model.Movie.Genres)
                {
                    genresList.Add(genre.Name);
                }
                string genres = string.Join(", ", genresList);
            }
            <p>@Model.Movie.Runtime MIN&nbsp;&nbsp;|&nbsp;&nbsp;@genres</p>
            <p class="top-movie-overview">@Model.Movie.Overview</p>
            <p>
                @for (int i = 0; i < 5; i++)
                {
                    if (i < GetAdjustedVoteAverage(Model.Movie.VoteAverage))
                    {
                        <i class="fas fa-star" style="color:gold"></i>
                    }
                    else
                    {
                        <i class="fas fa-star" style="color:gray"></i>
                    }
                }
            </p>
            <div class="watchlist-button-container">
                <button onclick="saveToLocalStorage('@Model.Movie.Id', '@Model.Movie.Title', '@Model.Movie.PosterPath')" id="watchlistButton">Add to Watchlist</button>
            </div>
            <h2 class="similar-movies-label">Similar Movies</h2>
            <div class="similar-movies-row">
                @if (Model.SimilarMovies != null && Model.SimilarMovies.Results != null && Model.SimilarMovies.Results.Count > 0)
                {
                    @foreach (var similarMovie in Model.SimilarMovies.Results.Take(4).Where(m => m.PosterPath != null))
                    {
                        <div class="similar-movie-item">
                            <a asp-area="" asp-controller="Home" asp-action="Details" asp-route-result="@similarMovie.Id" style="text-decoration: none;">
                                <img src="@($"https://image.tmdb.org/t/p/w200/{similarMovie.PosterPath}")" alt="@similarMovie.Title" class="similar-movie-poster" />
                                <h4>@similarMovie.Title</h4>
                            </a>
                        </div>
                    }
                }
                else
                {
                    <p>No similar movies found.</p>
                }
            </div>
        </div>
        <img src="@($"https://image.tmdb.org/t/p/w500/{Model.Movie.PosterPath}")" alt="@Model.Movie.Title" class="top-movie-poster" />
    }
    else
    {
        <p>Failed to retrieve data from the API.</p>
    }
</div>

<script>
    document.addEventListener("DOMContentLoaded", function(event) {
        var existingData = localStorage.getItem("movieData");
        var button = document.getElementById("watchlistButton");

        if (existingData) {
            var existingMovies = JSON.parse(existingData);
            var index = existingMovies.findIndex(function (m) {
                return m.id === '@Model.Movie.Id';
            });

            if (index > -1) {
                button.textContent = "Remove from Watchlist";
                button.style.backgroundColor = "black";
            }
        }
    });

    function saveToLocalStorage(movieId, movieTitle, posterUrl) {
        var movie = {
            id: movieId,
            title: movieTitle,
            posterUrl: posterUrl
        };

        var existingData = localStorage.getItem("movieData");
        var button = document.getElementById("watchlistButton");

        if (existingData) {
            var existingMovies = JSON.parse(existingData);
            var index = existingMovies.findIndex(function (m) {
                return m.id === movieId;
            });

            if (index > -1) {
                existingMovies.splice(index, 1);
                var updatedData = JSON.stringify(existingMovies);
                localStorage.setItem("movieData", updatedData);
                button.textContent = "Add to Watchlist";
                button.style.backgroundColor = "#F82A37";
            } else {
                existingMovies.push(movie);
                var updatedData = JSON.stringify(existingMovies);
                localStorage.setItem("movieData", updatedData);
                button.textContent = "Remove from Watchlist";
                button.style.backgroundColor = "black";
            }
        } else {
            var newMovies = [movie];
            var newData = JSON.stringify(newMovies);
            localStorage.setItem("movieData", newData);
        }
    }
</script>


@functions {
    public int GetAdjustedVoteAverage(double voteAverage)
    {
        return (int)Math.Round(voteAverage / 2);
    }
}
